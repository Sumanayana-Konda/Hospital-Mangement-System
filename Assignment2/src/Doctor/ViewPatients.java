/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Doctor;

import Ecosystem.Ecosystem;
import Encounter.Encounter;
import Encounter.Vital_Signs;
import Patient.Patients;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sumanayanakonda
 */
public class ViewPatients extends javax.swing.JPanel {
Ecosystem e;
Doctors d;
    /**
     * Creates new form ViewPatients
     */
    public ViewPatients(Ecosystem e, Doctors d) {
        initComponents();
        this.e =e;
        this.d = d;
        Tablefilling();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patient = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        encounter = new javax.swing.JTable();
        View_Encounters = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        height = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        weight = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bloodpressure = new javax.swing.JTextField();
        apt = new com.toedter.calendar.JDateChooser();
        temperature = new javax.swing.JTextField();
        Add_Encounter = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        diagnosis = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        pulserate = new javax.swing.JTextField();
        Update_Encounter = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        doctor = new javax.swing.JTextField();
        View_Selected_Encounter = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        encounterid = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        patient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Patient Name"
            }
        ));
        jScrollPane1.setViewportView(patient);

        encounter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Temperature", "Blood Pressure", "Weight", "Height", "Pulse Rate", "Appointment time", "Diagnosis", "Doctor", "Encounter ID"
            }
        ));
        jScrollPane2.setViewportView(encounter);

        View_Encounters.setText("View Encounters");
        View_Encounters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_EncountersActionPerformed(evt);
            }
        });

        jLabel2.setText("Temperature:");

        jLabel8.setText("Diagnosis:");

        jLabel7.setText("Appointment Time:");

        jLabel6.setText("Pulse Rate:");

        jLabel5.setText("Height:");

        jLabel4.setText("Weight:");

        Add_Encounter.setText("Add Encounter");
        Add_Encounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_EncounterActionPerformed(evt);
            }
        });

        jLabel3.setText("Blood Pressure:");

        jLabel1.setText("Add Encounter");

        Update_Encounter.setText("Update Encounter");
        Update_Encounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_EncounterActionPerformed(evt);
            }
        });

        jLabel9.setText("Doctor:");

        View_Selected_Encounter.setText("View Selected Encounter");
        View_Selected_Encounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_Selected_EncounterActionPerformed(evt);
            }
        });

        jLabel10.setText("Encounter Id:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(View_Encounters)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(View_Selected_Encounter))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(228, 228, 228)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(169, 169, 169)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(temperature)
                                            .addComponent(bloodpressure)
                                            .addComponent(weight)
                                            .addComponent(height)
                                            .addComponent(pulserate)
                                            .addComponent(diagnosis)
                                            .addComponent(apt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(doctor, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                                            .addComponent(encounterid))))
                                .addGap(32, 32, 32))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(Add_Encounter)
                        .addGap(255, 255, 255)
                        .addComponent(Update_Encounter)))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(View_Encounters)
                    .addComponent(View_Selected_Encounter))
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(temperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bloodpressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(height, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(pulserate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(apt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(diagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(doctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(encounterid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add_Encounter)
                    .addComponent(Update_Encounter))
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void View_EncountersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_EncountersActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = patient.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a Patient");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) encounter.getModel();
        model.setRowCount(0);
        for(Patients p : d.getPatienthistory().getPatients()){
        if(p.getFullName().equals(patient.getValueAt(selectedRow, 0))){
        
            for(Encounter en : e.getEncounterhistory().getEncounterHistoryArrayList())
             
            {
                if(p.getUsername().equals(en.getPatient().getUsername())&&p.getPassword().equals(en.getPatient().getPassword()))
           {
                
            Object[] row = new Object[9];
            row[0] = en.getVitalSign().getTemperature();
            row[1] = en.getVitalSign().getBlood_Pressure();
            row[2] = en.getVitalSign().getWeight();
            row[3] = en.getVitalSign().getHeight();
            row[4] = en.getVitalSign().getPulse_Rate();
            row[5] = en.getAptTime();
            row[6] = en.getDiagnosis();
            row[7] = en.getDoctor().getFullName();
            row[8] = en.getEncounter_id();
            model.addRow(row);
            }}
            
        
        }
        
        }
        
    }//GEN-LAST:event_View_EncountersActionPerformed

    private void Add_EncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_EncounterActionPerformed
        // TODO add your handling code here:

        int selectedRow = patient.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select a Patient");
            return;
        }
        else{
            for (Patients p: d.getPatienthistory().getPatients()){
                if(p.getFullName().equals(patient.getValueAt(selectedRow, 0))){
                    int temp = Integer.parseInt(temperature.getText());
                    int blood = Integer.parseInt(bloodpressure.getText());
                    int weight1 = Integer.parseInt(weight.getText());
                    int height1 = Integer.parseInt(height.getText());
                    int pulse = Integer.parseInt(pulserate.getText());
                    Vital_Signs vt = new Vital_Signs(temp, blood, weight1, height1,pulse);
                    Encounter en  = new Encounter(vt, apt.getDate(), diagnosis.getText(), p, d, encounterid.getText());
                    e.getEncounterhistory().addNewEncounter(en);
                    JOptionPane.showMessageDialog(this, "Encounter Added");

                }

            }

        }
    }//GEN-LAST:event_Add_EncounterActionPerformed

    private void Update_EncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_EncounterActionPerformed
        // TODO add your handling code here:
        int selectedRow = encounter.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select an Encounter to Update.");
            return;
        }
        else{
            
            for(Encounter en : e.getEncounterhistory().getEncounterHistoryArrayList())
             
            {    if(en.getEncounter_id().equals(encounter.getValueAt(selectedRow, 8))){
                    int temp = Integer.parseInt(temperature.getText());
                    int blood = Integer.parseInt(bloodpressure.getText());
                    int weight1 = Integer.parseInt(weight.getText());
                    int height1 = Integer.parseInt(height.getText());
               int pulse = Integer.parseInt(pulserate.getText());
               en.getVitalSign().setTemperature(temp);
               en.getVitalSign().setBlood_Pressure(blood);
               en.getVitalSign().setHeight(height1);
               en.getVitalSign().setWeight(weight1);
               en.getVitalSign().setPulse_Rate(pulse);
               en.setDiagnosis(diagnosis.getText());
               en.setAptTime(apt.getDate());
               JOptionPane.showMessageDialog(this, "Encounter Updated");
        }}
        
            }
    }//GEN-LAST:event_Update_EncounterActionPerformed

    private void View_Selected_EncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_Selected_EncounterActionPerformed
        // TODO add your handling code here:
        int selectedRow = encounter.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please Select an Encounter");
            return;
        }
        else{
            temperature.setText(encounter.getValueAt(selectedRow, 0).toString());
            bloodpressure.setText(encounter.getValueAt(selectedRow, 1).toString());
            weight.setText(encounter.getValueAt(selectedRow, 2).toString());
            height.setText(encounter.getValueAt(selectedRow, 3).toString());
            pulserate.setText(encounter.getValueAt(selectedRow, 4).toString());
            //apt.setDate(encounter.getValueAt(selectedRow, 5));
            diagnosis.setText(encounter.getValueAt(selectedRow, 6).toString());
            doctor.setText(encounter.getValueAt(selectedRow, 7).toString());
        }
    }//GEN-LAST:event_View_Selected_EncounterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Encounter;
    private javax.swing.JButton Update_Encounter;
    private javax.swing.JButton View_Encounters;
    private javax.swing.JButton View_Selected_Encounter;
    private com.toedter.calendar.JDateChooser apt;
    private javax.swing.JTextField bloodpressure;
    private javax.swing.JTextField diagnosis;
    private javax.swing.JTextField doctor;
    private javax.swing.JTable encounter;
    private javax.swing.JTextField encounterid;
    private javax.swing.JTextField height;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable patient;
    private javax.swing.JTextField pulserate;
    private javax.swing.JTextField temperature;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables

    private void Tablefilling() {
    
        DefaultTableModel model = (DefaultTableModel) patient.getModel();
        model.setRowCount(0);
        for (Patients p : d.getPatienthistory().getPatients())
        {
            System.out.println(p.getFullName());
            Object[] row = new Object[1];
                row[0] = p.getFullName();
                model.addRow(row);
        }
    }
}
